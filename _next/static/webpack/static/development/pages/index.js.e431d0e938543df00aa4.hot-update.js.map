{"version":3,"file":"static/webpack/static/development/pages/index.js.e431d0e938543df00aa4.hot-update.js","sources":["webpack:///./src/elements/mouse-tracker/mouse-tracker.element.tsx","webpack:///./src/hooks/useMousePointer.tsx"],"sourcesContent":["import React, { createRef, useEffect } from 'react';\nimport useMousePointer from '@hooks/useMousePointer';\nimport styles from './mouse-tracker.module.scss';\n\nconst MouseTracker = () => {\n  const { setRef, setCustomCallback } = useMousePointer();\n\n  useEffect(() => {\n    if (mouseRef.current) {\n      console.log({ mouseRef });\n      const callback = (x, y) => {\n        mouseRef.current.style.left = `${x}px`;\n        mouseRef.current.style.top = `${y}px`;\n      };\n      setCustomCallback(callback);\n    }\n  }, [mouseRef.current]);\n\n  return (\n    <div id=\"mouse-pointer\" className={styles.mousePointer} ref={setRef} />\n  );\n};\n\nexport default MouseTracker;\n","import { useState, useEffect, RefObject, useCallback } from 'react';\n\ninterface MousePosition {\n  x: number | null;\n  y: number | null;\n}\n\ntype CustomCallback = (x: number, y: number) => void | null;\n\nconst initialState = {\n  x: null,\n  y: null,\n};\n\nconst useMousePointer = () => {\n  const [customCallback, setCustomCallback] = useState<CustomCallback>(null);\n  const [element, setElement] = useState<HTMLElement | null>(null);\n  const [mousePosition, setMousePosition] = useState<MousePosition>(\n    initialState\n  );\n\n  const isPointerInElement = (ref: RefObject<HTMLElement>) => {\n    const object = ref.current;\n    // console.log({ object });\n    return true;\n  };\n\n  // useEffect(() => {\n  //   console.log({ customCallback });\n  // }, [customCallback]);\n\n  const handleOnMouseMove = useCallback(\n    (event: MouseEvent) => {\n      const { clientX: x, clientY: y } = event;\n      setMousePosition({ x, y });\n      if (customCallback) {\n        // console.log('here');\n        // const { x, y } = mousePosition;\n        customCallback(x, y);\n      }\n    },\n\n    [element, customCallback]\n  );\n\n  useEffect(() => {\n    document.addEventListener('mousemove', handleOnMouseMove);\n\n    return () => {\n      document.removeEventListener('mousemove', handleOnMouseMove);\n    };\n  }, [element]);\n\n  return {\n    isPointerInElement,\n    mousePosition,\n    setRef: setElement,\n    setCustomCallback,\n  };\n};\n\nexport default useMousePointer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;A","sourceRoot":""}