{"version":3,"file":"static/webpack/static/development/pages/index.js.b98186290237caef1e47.hot-update.js","sources":["webpack:///./src/hooks/useMousePointer.tsx"],"sourcesContent":["import { useState, useEffect, RefObject, useCallback } from 'react';\n\ninterface MousePosition {\n  x: number | null;\n  y: number | null;\n}\n\ntype CustomCallback = (x: number, y: number) => void | null;\n\nconst initialState = {\n  x: null,\n  y: null,\n};\n\nconst useMousePointer = () => {\n  const [element, setElement] = useState<HTMLElement | null>(null);\n  const [mousePosition, setMousePosition] = useState<MousePosition>(\n    initialState\n  );\n\n  const isPointerInElement = (ref: RefObject<HTMLElement>) => {\n    const object = ref.current;\n    // console.log({ object });\n    return true;\n  };\n\n  useEffect(() => {\n    if (element !== null) {\n      const onMove = (event: MouseEvent) => {\n        const { clientX: x, clientY: y } = event;\n        setMousePosition({ x, y });\n      };\n\n      const addEvent = element.addEventListener.bind(element);\n      addEvent('mousemove', onMove);\n\n      return () => {\n        const removeEvent = element.addEventListener.bind(element);\n        removeEvent('mousemove', onMove);\n      };\n    }\n    return () => {};\n  }, [element]);\n\n  return {\n    isPointerInElement,\n    mousePosition,\n    setRef: setElement,\n  };\n};\n\nexport default useMousePointer;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;A","sourceRoot":""}