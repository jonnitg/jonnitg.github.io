{"version":3,"file":"static/webpack/static/development/pages/index.js.9026e57ff9b2f9a74f7e.hot-update.js","sources":["webpack:///./src/components/theme-settings/theme-settings.component.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { TwitterPicker } from 'react-color';\nimport { PointerClassesContext } from '@context/pointer-classes.context';\nimport styles from './theme-settings.module.scss';\n\nconst colors = [\n  '#f44336',\n  '#e91e63',\n  '#9c27b0',\n  '#673ab7',\n  '#3f51b5',\n  '#2196f3',\n  '#03a9f4',\n  '#00bcd4',\n  '#009688',\n  '#4caf50',\n  '#8bc34a',\n  '#cddc39',\n  '#ffeb3b',\n  '#ffc107',\n  '#ff9800',\n  '#ff5722',\n  '#795548',\n  '#607d8b',\n];\n\nconst ThemeSettings = () => {\n  const [showThemePicker, setShowThemePicker] = useState(false);\n  const [showTextPicker, setShowTextPicker] = useState(false);\n\n  const { classes: pointerClasses, setClasses } = useContext(\n    PointerClassesContext\n  );\n\n  const handleChangeComplete = (color, type) => {\n    if (type === 'theme') {\n      document.documentElement.style.setProperty(\n        '--main-theme-color',\n        color.hex\n      );\n      window.localStorage.setItem('themeColor', color.hex);\n    }\n    if (type === 'text') {\n      document.documentElement.style.setProperty(\n        '--main-text-color',\n        color.hex\n      );\n      window.localStorage.setItem('textColor', color.hex);\n    }\n  };\n\n  const toggleOptions = (type) => {\n    if (type === 'theme') {\n      setShowThemePicker(!showThemePicker);\n      setShowTextPicker(false);\n    }\n    if (type === 'text') {\n      setShowThemePicker(false);\n      setShowTextPicker(!showTextPicker);\n    }\n  };\n\n  const addPointerClass = () => {\n    setClasses({ ...pointerClasses, 'pointer__cursor--is-on-link': true });\n  };\n\n  const removePointerClass = () => {\n    setClasses({ ...pointerClasses, 'pointer__cursor--is-on-link': false });\n  };\n\n  useEffect(() => {\n    const { localStorage } = window;\n    const currentColor = localStorage.getItem('themeColor');\n\n    if (currentColor) {\n      const found = colors.find(\n        (color) => color === currentColor.trim(),\n        currentColor\n      );\n\n      document.documentElement.style.setProperty('--main-theme-color', found);\n    }\n  }, []);\n\n  return (\n    <div className={styles['theme-settings']}>\n      <div>\n        <button\n          type=\"button\"\n          onMouseOver={addPointerClass}\n          onFocus={addPointerClass}\n          onMouseOut={removePointerClass}\n          onBlur={removePointerClass}\n          className={styles['theme-settings__button']}\n          onClick={() => toggleOptions('theme')}\n        >\n          Theme Color\n        </button>\n        {showThemePicker && (\n          <TwitterPicker\n            className={styles['theme-settings__picker']}\n            colors={colors}\n            width={315}\n            onChangeComplete={(color) => handleChangeComplete(color, 'theme')}\n          />\n        )}\n      </div>\n\n      <div>\n        <button\n          type=\"button\"\n          onMouseOver={addPointerClass}\n          onFocus={addPointerClass}\n          onMouseOut={removePointerClass}\n          onBlur={removePointerClass}\n          className={styles['theme-settings__button']}\n          onClick={() => toggleOptions('text')}\n        >\n          Text Color\n        </button>\n\n        {showTextPicker && (\n          <TwitterPicker\n            className={styles['theme-settings__picker']}\n            colors={colors}\n            width={315}\n            onChangeComplete={(color) => handleChangeComplete(color, 'text')}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeSettings;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAoBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}