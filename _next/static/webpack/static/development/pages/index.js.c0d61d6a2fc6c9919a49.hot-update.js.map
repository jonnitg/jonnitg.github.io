{"version":3,"file":"static/webpack/static/development/pages/index.js.c0d61d6a2fc6c9919a49.hot-update.js","sources":["webpack:///./src/hooks/useMousePointer.tsx"],"sourcesContent":["import {\n  useState,\n  useEffect,\n  useRef,\n  createRef,\n  RefObject,\n  useCallback,\n} from 'react';\n\nconst mouseRef = createRef<HTMLDivElement>();\n\ninterface MousePosition {\n  x: number;\n  y: number;\n}\n\nconst initialState = {\n  x,\n  y,\n};\n\nconst useMousePointer = () => {\n  const [element, setElement] = useState<HTMLElement | null>(null);\n  const [state, setState] = useState<MousePosition>(initialState);\n\n  const isPointerInElement = (ref: RefObject<HTMLElement>) => {\n    const object = ref.current;\n    console.log({ object, mouseLocation });\n    return true;\n  };\n\n  const handleOnMouseMove = useCallback(\n    (e: MouseEvent) => {\n      const { clientX: x, clientY: y } = e;\n      mouseRef.current.style.left = `${x}px`;\n      mouseRef.current.style.top = `${y}px`;\n    },\n    [element]\n  );\n\n  useEffect(() => {\n    document.addEventListener('mousemove', handleOnMouseMove);\n\n    return () => {\n      document.removeEventListener('mousemove', handleOnMouseMove);\n    };\n  }, [element]);\n\n  return { isPointerInElement, mouseLocation, setElement };\n};\n\nexport default useMousePointer;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AASA;AAOA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}